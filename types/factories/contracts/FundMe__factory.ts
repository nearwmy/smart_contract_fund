/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fundersToAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainlinkDataFeedLatestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110a73803806110a783398181016040528101906100329190610117565b73694aa1769357215de4fac081bf1f309adc325306600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426003819055508060048190555050610144565b600080fd5b6000819050919050565b6100f4816100e1565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b60006020828403121561012d5761012c6100dc565b5b600061013b84828501610102565b91505092915050565b610f54806101536000396000f3fe6080604052600436106100705760003560e01c80639f883a051161004e5780639f883a05146100ce578063b60d42881461010b578063bea4dfb514610115578063f2fde38b1461014057610070565b8063590e1ae3146100755780638da5cb5b1461008c5780638edd6eb6146100b7575b600080fd5b34801561008157600080fd5b5061008a610169565b005b34801561009857600080fd5b506100a16103ba565b6040516100ae91906108b2565b60405180910390f35b3480156100c357600080fd5b506100cc6103e0565b005b3480156100da57600080fd5b506100f560048036038101906100f091906108fe565b610603565b6040516101029190610944565b60405180910390f35b61011361061b565b005b34801561012157600080fd5b5061012a6106cc565b6040516101379190610978565b60405180910390f35b34801561014c57600080fd5b50610167600480360381019061016291906108fe565b61076d565b005b60045460035461017991906109c2565b4210156101bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b290610a53565b60405180910390fd5b60146101c647610841565b10610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd90610abf565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e90610b2b565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516102eb90610b7c565b60006040518083038185875af1925050503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b50508091505080610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a90610bdd565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004546003546103f091906109c2565b421015610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610a53565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610c6f565b60405180910390fd5b60146104cd47610841565b101561050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610cdb565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161053490610b7c565b60006040518083038185875af1925050503d8060008114610571576040519150601f19603f3d011682016040523d82523d6000602084013e610576565b606091505b505080915050806105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390610bdd565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b674563918244f4000061062d34610841565b101561066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590610d47565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600260008282546106c391906109c2565b92505081905550565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190610e01565b5050509150508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490610c6f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008061084c6106cc565b90506305f5e100818461085f9190610e7c565b6108699190610eed565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089c82610871565b9050919050565b6108ac81610891565b82525050565b60006020820190506108c760008301846108a3565b92915050565b600080fd5b6108db81610891565b81146108e657600080fd5b50565b6000813590506108f8816108d2565b92915050565b600060208284031215610914576109136108cd565b5b6000610922848285016108e9565b91505092915050565b6000819050919050565b61093e8161092b565b82525050565b60006020820190506109596000830184610935565b92915050565b6000819050919050565b6109728161095f565b82525050565b600060208201905061098d6000830184610969565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cd8261092b565b91506109d88361092b565b92508282019050808211156109f0576109ef610993565b5b92915050565b600082825260208201905092915050565b7f77696e646f77206973206e6f7420636c6f736564000000000000000000000000600082015250565b6000610a3d6014836109f6565b9150610a4882610a07565b602082019050919050565b60006020820190508181036000830152610a6c81610a30565b9050919050565b7f5461726765742069732072656163686564000000000000000000000000000000600082015250565b6000610aa96011836109f6565b9150610ab482610a73565b602082019050919050565b60006020820190508181036000830152610ad881610a9c565b9050919050565b7f7468657265206973206e6f2066756e6420666f7220796f750000000000000000600082015250565b6000610b156018836109f6565b9150610b2082610adf565b602082019050919050565b60006020820190508181036000830152610b4481610b08565b9050919050565b600081905092915050565b50565b6000610b66600083610b4b565b9150610b7182610b56565b600082019050919050565b6000610b8782610b59565b9150819050919050565b7f7478206973206661696c65640000000000000000000000000000000000000000600082015250565b6000610bc7600c836109f6565b9150610bd282610b91565b602082019050919050565b60006020820190508181036000830152610bf681610bba565b9050919050565b7f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460008201527f206279206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610c596029836109f6565b9150610c6482610bfd565b604082019050919050565b60006020820190508181036000830152610c8881610c4c565b9050919050565b7f546172676574206973206e6f7420726561636865640000000000000000000000600082015250565b6000610cc56015836109f6565b9150610cd082610c8f565b602082019050919050565b60006020820190508181036000830152610cf481610cb8565b9050919050565b7f53656e64206d6f72652045544800000000000000000000000000000000000000600082015250565b6000610d31600d836109f6565b9150610d3c82610cfb565b602082019050919050565b60006020820190508181036000830152610d6081610d24565b9050919050565b600069ffffffffffffffffffff82169050919050565b610d8681610d67565b8114610d9157600080fd5b50565b600081519050610da381610d7d565b92915050565b610db28161095f565b8114610dbd57600080fd5b50565b600081519050610dcf81610da9565b92915050565b610dde8161092b565b8114610de957600080fd5b50565b600081519050610dfb81610dd5565b92915050565b600080600080600060a08688031215610e1d57610e1c6108cd565b5b6000610e2b88828901610d94565b9550506020610e3c88828901610dc0565b9450506040610e4d88828901610dec565b9350506060610e5e88828901610dec565b9250506080610e6f88828901610d94565b9150509295509295909350565b6000610e878261092b565b9150610e928361092b565b9250828202610ea08161092b565b91508282048414831517610eb757610eb6610993565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef88261092b565b9150610f038361092b565b925082610f1357610f12610ebe565b5b82820490509291505056fea26469706673582212201d4cdc8bed414e0fc1a6ed8ad1c34c50e7834d91e26b0928052c6329cb51707a64736f6c634300081c0033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lockTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_lockTime, overrides || {});
  }
  override deploy(
    _lockTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_lockTime, overrides || {}) as Promise<
      FundMe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FundMe__factory {
    return super.connect(runner) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FundMe {
    return new Contract(address, _abi, runner) as unknown as FundMe;
  }
}
